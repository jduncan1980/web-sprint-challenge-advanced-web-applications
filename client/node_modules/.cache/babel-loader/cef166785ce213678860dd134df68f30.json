{"ast":null,"code":"var _jsxFileName = \"/Users/jasonduncan/Lambda_Projects/web-sprint-challenge-advanced-web-applications/client/src/components/Contact.js\";\nimport React from 'react';\nimport { Box, TextField, Button, makeStyles } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nconst useStyles = makeStyles({\n  container: {\n    backgroundColor: 'rgba(211,199,221,0.9)',\n    width: '50%',\n    padding: '2%',\n    margin: '10% auto',\n    borderRadius: '15px'\n  },\n  heading: {\n    fontSize: '3rem',\n    marginTop: '4rem'\n  },\n  input: {\n    width: '90%',\n    display: 'block',\n    margin: '30px auto'\n  },\n  button: {\n    margin: '15px',\n    display: 'block'\n  }\n});\nexport default function Contact({\n  setDialogOpen\n}) {\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState\n  } = useForm({\n    mode: 'onChange'\n  });\n  const classes = useStyles();\n\n  const onSubmit = async data => {\n    setDialogOpen(false);\n    alert(`Thank you, ${data.name}. Your message '${data.message} has been sent with email ${data.email}'`);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    fullWidth: true,\n    autoFocus: true,\n    variant: \"outlined\",\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    inputRef: register({\n      required: 'Required'\n    }),\n    label: \"Name:\",\n    error: errors.name ? true : false,\n    helperText: errors.name ? errors.name.message : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"text\",\n    id: \"email\",\n    name: \"email\",\n    inputRef: register({\n      required: 'Required'\n    }),\n    label: \"Email:\",\n    error: errors.email ? true : false,\n    helperText: errors.email ? errors.email.message : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    fullWidth: true,\n    multiline: true,\n    variant: \"outlined\",\n    type: \"text\",\n    id: \"message\",\n    name: \"message\",\n    inputRef: register({\n      required: 'Required'\n    }),\n    label: \"Message:\",\n    error: errors.message ? true : false,\n    helperText: errors.message ? errors.message.message : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    disabled: !formState.isValid,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }, \"Submit\"));\n}","map":{"version":3,"sources":["/Users/jasonduncan/Lambda_Projects/web-sprint-challenge-advanced-web-applications/client/src/components/Contact.js"],"names":["React","Box","TextField","Button","makeStyles","useForm","useStyles","container","backgroundColor","width","padding","margin","borderRadius","heading","fontSize","marginTop","input","display","button","Contact","setDialogOpen","handleSubmit","register","errors","formState","mode","classes","onSubmit","data","alert","name","message","email","required","isValid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Box, TextField, Button, makeStyles } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\tbackgroundColor: 'rgba(211,199,221,0.9)',\n\t\twidth: '50%',\n\t\tpadding: '2%',\n\t\tmargin: '10% auto',\n\t\tborderRadius: '15px',\n\t},\n\theading: {\n\t\tfontSize: '3rem',\n\t\tmarginTop: '4rem',\n\t},\n\tinput: {\n\t\twidth: '90%',\n\t\tdisplay: 'block',\n\t\tmargin: '30px auto',\n\t},\n\tbutton: {\n\t\tmargin: '15px',\n\t\tdisplay: 'block',\n\t},\n});\n\nexport default function Contact({ setDialogOpen }) {\n\tconst { handleSubmit, register, errors, formState } = useForm({\n\t\tmode: 'onChange',\n\t});\n\tconst classes = useStyles();\n\n\tconst onSubmit = async (data) => {\n\t\tsetDialogOpen(false);\n\t\talert(\n\t\t\t`Thank you, ${data.name}. Your message '${data.message} has been sent with email ${data.email}'`\n\t\t);\n\t};\n\treturn (\n\t\t<Box component='form' onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<TextField\n\t\t\t\tclassName={classes.input}\n\t\t\t\tfullWidth={true}\n\t\t\t\tautoFocus\n\t\t\t\tvariant='outlined'\n\t\t\t\ttype='text'\n\t\t\t\tid='name'\n\t\t\t\tname='name'\n\t\t\t\tinputRef={register({ required: 'Required' })}\n\t\t\t\tlabel='Name:'\n\t\t\t\terror={errors.name ? true : false}\n\t\t\t\thelperText={errors.name ? errors.name.message : null}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tclassName={classes.input}\n\t\t\t\tfullWidth={true}\n\t\t\t\tvariant='outlined'\n\t\t\t\ttype='text'\n\t\t\t\tid='email'\n\t\t\t\tname='email'\n\t\t\t\tinputRef={register({ required: 'Required' })}\n\t\t\t\tlabel='Email:'\n\t\t\t\terror={errors.email ? true : false}\n\t\t\t\thelperText={errors.email ? errors.email.message : null}\n\t\t\t/>\n\n\t\t\t<TextField\n\t\t\t\tclassName={classes.input}\n\t\t\t\tfullWidth={true}\n\t\t\t\tmultiline\n\t\t\t\tvariant='outlined'\n\t\t\t\ttype='text'\n\t\t\t\tid='message'\n\t\t\t\tname='message'\n\t\t\t\tinputRef={register({ required: 'Required' })}\n\t\t\t\tlabel='Message:'\n\t\t\t\terror={errors.message ? true : false}\n\t\t\t\thelperText={errors.message ? errors.message.message : null}\n\t\t\t/>\n\n\t\t\t<Button\n\t\t\t\tvariant='contained'\n\t\t\t\tcolor='primary'\n\t\t\t\tsize='large'\n\t\t\t\ttype='submit'\n\t\t\t\tdisabled={!formState.isValid}\n\t\t\t\tclassName={classes.button}\n\t\t\t>\n\t\t\t\tSubmit\n\t\t\t</Button>\n\t\t</Box>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}