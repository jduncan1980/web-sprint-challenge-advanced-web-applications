{"ast":null,"code":"var _jsxFileName = \"/Users/jasonduncan/Lambda_Projects/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js\";\nimport React, { useState } from 'react';\nimport axiosWithAuth from '../utils/axiosWithAuth';\nimport { Box, TextField, Button, Typography, List, ListItem, makeStyles } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nconst initialColor = {\n  color: '',\n  code: {\n    hex: ''\n  },\n  id: ''\n};\nconst useStyles = makeStyles({\n  container: {\n    height: '100%',\n    width: '300px',\n    boxShadow: '0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)'\n  },\n  heading: {\n    fontSize: '3rem',\n    marginTop: '4rem'\n  },\n  input: {\n    width: '90%',\n    display: 'block',\n    margin: '30px auto'\n  },\n  button: {\n    margin: '10px'\n  },\n  delete: {\n    color: 'rgb(216, 87, 87)'\n  },\n  colorBox: {\n    height: ' 16px',\n    width: '16px',\n    border: '1px lightgray solid',\n    marginRight: '36px'\n  }\n});\n\nconst ColorList = ({\n  colors,\n  updateColors\n}) => {\n  // console.log(colors);\n  const classes = useStyles();\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const saveEdit = async e => {\n    try {\n      e.preventDefault();\n      const response = await axiosWithAuth().put(`/colors/${colorToEdit.id}`, colorToEdit);\n      const filteredList = colors.filter(color => color.id !== colorToEdit.id);\n      updateColors([...filteredList, response.data]);\n      console.log(response);\n    } catch (error) {\n      alert(`Something went wrong => ${error}`);\n    }\n  };\n\n  const deleteColor = async color => {\n    try {\n      const response = await axiosWithAuth().delete(`/colors/${color.id}`);\n      const filteredList = colors.filter(color => color.id !== response.data);\n      updateColors([...filteredList]);\n    } catch (error) {\n      alert(`Something went wrong => ${error}`);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }, \"colors\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }\n  }, colors.map(color => /*#__PURE__*/React.createElement(ListItem, {\n    key: color.color,\n    onClick: () => editColor(color),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.delete,\n    component: \"span\",\n    onClick: e => {\n      e.stopPropagation();\n      deleteColor(color);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 8\n    }\n  }, \"x\"), ' ', color.color), /*#__PURE__*/React.createElement(Box, {\n    className: classes.colorBox,\n    style: {\n      backgroundColor: color.code.hex\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  })))), editing && /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    onSubmit: saveEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 6\n    }\n  }, \"edit color\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 6\n    }\n  }, \"color name:\", /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      color: e.target.value\n    }),\n    value: colorToEdit.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 6\n    }\n  }, \"hex code:\", /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: colorToEdit.code.hex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.button,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, \"save\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.button,\n    onClick: () => setEditing(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, \"cancel\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default ColorList;","map":{"version":3,"sources":["/Users/jasonduncan/Lambda_Projects/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js"],"names":["React","useState","axiosWithAuth","Box","TextField","Button","Typography","List","ListItem","makeStyles","useForm","initialColor","color","code","hex","id","useStyles","container","height","width","boxShadow","heading","fontSize","marginTop","input","display","margin","button","delete","colorBox","border","marginRight","ColorList","colors","updateColors","classes","editing","setEditing","colorToEdit","setColorToEdit","editColor","saveEdit","e","preventDefault","response","put","filteredList","filter","data","console","log","error","alert","deleteColor","map","stopPropagation","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axiosWithAuth from '../utils/axiosWithAuth';\nimport {\n\tBox,\n\tTextField,\n\tButton,\n\tTypography,\n\tList,\n\tListItem,\n\tmakeStyles,\n} from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\n\nconst initialColor = {\n\tcolor: '',\n\tcode: { hex: '' },\n\tid: '',\n};\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\theight: '100%',\n\t\twidth: '300px',\n\t\tboxShadow: '0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)',\n\t},\n\theading: {\n\t\tfontSize: '3rem',\n\t\tmarginTop: '4rem',\n\t},\n\tinput: {\n\t\twidth: '90%',\n\t\tdisplay: 'block',\n\t\tmargin: '30px auto',\n\t},\n\tbutton: {\n\t\tmargin: '10px',\n\t},\n\tdelete: {\n\t\tcolor: 'rgb(216, 87, 87)',\n\t},\n\tcolorBox: {\n\t\theight: ' 16px',\n\t\twidth: '16px',\n\t\tborder: '1px lightgray solid',\n\t\tmarginRight: '36px',\n\t},\n});\n\nconst ColorList = ({ colors, updateColors }) => {\n\t// console.log(colors);\n\tconst classes = useStyles();\n\tconst [editing, setEditing] = useState(false);\n\tconst [colorToEdit, setColorToEdit] = useState(initialColor);\n\n\tconst editColor = (color) => {\n\t\tsetEditing(true);\n\t\tsetColorToEdit(color);\n\t};\n\n\tconst saveEdit = async (e) => {\n\t\ttry {\n\t\t\te.preventDefault();\n\t\t\tconst response = await axiosWithAuth().put(\n\t\t\t\t`/colors/${colorToEdit.id}`,\n\t\t\t\tcolorToEdit\n\t\t\t);\n\t\t\tconst filteredList = colors.filter(\n\t\t\t\t(color) => color.id !== colorToEdit.id\n\t\t\t);\n\t\t\tupdateColors([...filteredList, response.data]);\n\t\t\tconsole.log(response);\n\t\t} catch (error) {\n\t\t\talert(`Something went wrong => ${error}`);\n\t\t}\n\t};\n\n\tconst deleteColor = async (color) => {\n\t\ttry {\n\t\t\tconst response = await axiosWithAuth().delete(`/colors/${color.id}`);\n\t\t\tconst filteredList = colors.filter((color) => color.id !== response.data);\n\t\t\tupdateColors([...filteredList]);\n\t\t} catch (error) {\n\t\t\talert(`Something went wrong => ${error}`);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Box className={classes.container}>\n\t\t\t<Typography>colors</Typography>\n\t\t\t<List>\n\t\t\t\t{colors.map((color) => (\n\t\t\t\t\t<ListItem key={color.color} onClick={() => editColor(color)}>\n\t\t\t\t\t\t<Box component='span'>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tclassName={classes.delete}\n\t\t\t\t\t\t\t\tcomponent='span'\n\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\tdeleteColor(color);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tx\n\t\t\t\t\t\t\t</Box>{' '}\n\t\t\t\t\t\t\t{color.color}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tclassName={classes.colorBox}\n\t\t\t\t\t\t\tstyle={{ backgroundColor: color.code.hex }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t\t{editing && (\n\t\t\t\t<Box component='form' onSubmit={saveEdit}>\n\t\t\t\t\t<legend>edit color</legend>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tcolor name:\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tsetColorToEdit({ ...colorToEdit, color: e.target.value })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue={colorToEdit.color}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\thex code:\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tsetColorToEdit({\n\t\t\t\t\t\t\t\t\t...colorToEdit,\n\t\t\t\t\t\t\t\t\tcode: { hex: e.target.value },\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue={colorToEdit.code.hex}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Button variant='outlined' className={classes.button} type='submit'>\n\t\t\t\t\t\t\tsave\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tonClick={() => setEditing(false)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tcancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t\t<div className='spacer' />\n\t\t\t{/* stretch - build another form here to add a color */}\n\t\t</Box>\n\t);\n};\n\nexport default ColorList;\n"]},"metadata":{},"sourceType":"module"}